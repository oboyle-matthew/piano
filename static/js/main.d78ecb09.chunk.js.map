{"version":3,"sources":["components/Visualizer.js","parser/XMLParser.js","components/MainView.js","components/FileSaver.js","new_components/FileLoader.js","App.js","serviceWorker.js","index.js"],"names":["noteToScore","C","D","E","F","G","A","B","scoreToColor","0","1","2","3","4","5","6","7","8","9","10","11","triangle","size","color","width","height","backgroundColor","borderStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderLeftColor","borderRightColor","borderTopColor","borderBottomColor","circle","borderRadius","Visualizer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","img","arr","index","filter","note","i","map","parseInt","duration","reduce","a","b","score","octave","alter","notes","_this2","Math","min","apply","toConsumableArray","getScore","Number","isNaN","_this3","max","top","left","radius","react_default","createElement","style","position","text","fontSize","_this4","_this$props","props","beats","beatLength","multiplier","widthRatio","incrementMultiplier","leftNotes","rightNotes","lineLength","rightMax","getMaxScore","rightMin","getMinScore","leftMax","leftMin","overflowX","marginTop","id","noteArray","floor","sumUpTo","length","topLocation","convertToVisual","handDiff","Component","get_attribute","att","querySelector","innerHTML","is_chord","get_notes","xml","querySelectorAll","right","toAddLeft","toAddRight","forEach","note_obj","type","get_note_object","push","reverse","firstMeasure","firstMeasureDuration","console","log","secondMeasure","secondMeasureDuration","measureDiff","unshift","App","barsPerLine","selectedFile","hidden","file_name","linesInPdf","prevProps","resetScreen","bars","window","innerWidth","innerHeight","setState","label","value","step","lib","onChange","e","defineProperty","target","node","document","getElementById","self","domtoimage","toPng","then","src","Image","onload","pdf","jsPDF","canvas","getContext","drawImage","splitImage","toDataURL","addImage","addPage","save","catch","error","Menu","BurgerMenu","_this$props2","_this$state","sliders","marginLeft","textAlign","createSlider","marginBottom","onClick","takeScreenshot","zIndex","styles","bmBurgerButton","bmBurgerBars","background","bmCrossButton","bmCross","bmMenu","padding","bmMorphShape","fill","bmItemList","bmOverlay","noOverlay","pageWrapId","outerContainerId","components_Visualizer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","handleSelectedFile","event","files","handleFileRead","fileReader","updateNotes","DOMParser","parseFromString","result","name","FileReader","onloadend","readAsText","display","flexDirection","handleUpload","setNotes","bind","assertThisInitialized","FileLoader","MainView","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d78ecb09.chunk.js","sourcesContent":["import React, { Component } from 'react';\nconst noteToScore = {\"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11};\nconst scoreToColor = {0: \"red\", 1: \"black\", 2: \"pink\", 3: \"purple\", 4: \"green\", 5: \"cyan\", 6: \"orange\",\n    7: \"blue\", 8: \"grey\", 9: \"yellow\", 10: \"navy\", 11: \"brown\"};\nconst triangle = (size, color) => {\n    return {\n        width: 0,\n        height: 0,\n        backgroundColor: 'transparent',\n        borderStyle: 'solid',\n        borderLeftWidth: size * 1,\n        borderRightWidth: size * 1,\n        borderBottomWidth: size * 2,\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        borderTopColor: 'transparent',\n        borderBottomColor: color\n    };\n};\n\nconst circle = (size, color) => {\n    return {\n        width: size * 2,\n        height: size * 2,\n        borderRadius: size * 2,\n        backgroundColor: color\n    };\n};\n\nclass Visualizer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            img: null\n        }\n    }\n\n    sumUpTo(arr, index) {\n        return arr.filter((note, i) => i < index).map(note => parseInt(note[0].duration)).reduce((a, b) => a + b, 0);\n    }\n\n    getScore(note) {\n        let score = note.octave * 12 + noteToScore[note.note];\n        return note.alter ? score + parseInt(note.alter) : score;\n    }\n\n    getMinScore(notes) {\n        return Math.min(...notes.map(note => this.getScore(note[0])).filter(note => !Number.isNaN(note)));\n    }\n\n    getMaxScore(notes) {\n        return Math.max(...notes.map(note => this.getScore(note[0])).filter(note => !Number.isNaN(note)));\n    }\n\n    convertToVisual(note, top, left, width, radius) {\n        const color = scoreToColor[this.getScore(note) % 12];\n        if (note.octave === '4') {\n            return <div style={{position: 'absolute', width: width, top: top, left: left} }>\n                <div style={circle(radius, color)}/>\n            </div>\n        } else if (note.octave === '5') {\n            return <div style={{position: 'absolute', width: width, top: top, left: left }}>\n                <div style={triangle(radius, color)}/>\n            </div>\n        }\n        else {\n            let text = note.note;\n            if (note.alter === '1') {\n                text += \"#\"\n            } else if (note.alter === '-1') {\n                text += 'b'\n            }\n            return <div style={{position: 'absolute', width: width, height: radius*2, top: top, left: left, fontSize: radius*2}}>\n                {text}\n            </div>\n        }\n    }\n\n    render() {\n        const {beats, beatLength, multiplier, height, widthRatio, incrementMultiplier, leftNotes, rightNotes, radius} = this.props;\n        const lineLength = beats * beatLength * multiplier;\n        const rightMax = this.getMaxScore(rightNotes);\n        const rightMin = this.getMinScore(rightNotes);\n        const leftMax = this.getMaxScore(leftNotes);\n        const leftMin = this.getMinScore(leftNotes);\n\n        return (\n            <div style={{width: lineLength, overflowX: 'none', marginTop: 50}}>\n                <div id=\"capture\" >\n                    <div style={{position: 'relative'}}>\n                        {rightNotes.map((noteArray, i) => {\n                            let top = (height * Math.floor(this.sumUpTo(rightNotes, i) / lineLength));\n                            if (noteArray.length === 1) {\n                                top += (1 - ((this.getScore(noteArray[0]) - rightMin) / (rightMax - rightMin))) * incrementMultiplier;\n                            }\n                            let left = widthRatio * (this.sumUpTo(rightNotes, i) % lineLength);\n                            const width = noteArray[0].duration * widthRatio;\n                            return <div>\n                                {noteArray.map((note, i) => {\n                                    let topLocation = top + ((i / noteArray.length) * incrementMultiplier);\n                                    return this.convertToVisual(note, topLocation, left, width, radius / noteArray.length);\n                                })}\n                            </div>;\n                        })}\n                    </div>\n                    <div style={{position: 'relative'}}>\n                        {leftNotes.map((noteArray, i) => {\n                            let top = this.props.handDiff + (height * Math.floor(this.sumUpTo(leftNotes, i) / lineLength));\n                            if (noteArray.length === 1) {\n                                top += (1 - ((this.getScore(noteArray[0]) - leftMin) / (leftMax - leftMin))) * incrementMultiplier;\n                            }\n                            let left = widthRatio * (this.sumUpTo(leftNotes, i) % lineLength);\n                            const width = noteArray.duration * widthRatio;\n                            return <div>\n                                {noteArray.map((note, i) => {\n                                    let topLocation = top + ((i / noteArray.length) * incrementMultiplier);\n                                    return this.convertToVisual(note, topLocation, left, width, radius / noteArray.length);\n                                })}\n                            </div>;\n                        })}\n                    </div>\n                    <div style={{position: 'relative'}}>\n                        {rightNotes.map((note, i) => {\n                            note = note[0];\n                            let top = (height * Math.floor(this.sumUpTo(rightNotes, i) / lineLength));\n                            top -= this.props.radius;\n                            return <hr style={{position: 'absolute', top: top, left: 0, width: lineLength*widthRatio}}/>\n                        })}\n                    </div>\n                </div>\n                <div id={\"test\"}> </div>\n            </div>\n        );\n    }\n}\n\nexport default Visualizer;\n","function get_attribute(note, att) {\n    return note.querySelector(att) === null ? null : note.querySelector(att).innerHTML;\n}\n\nfunction is_chord(note) {\n    return note.querySelector('chord') !== null;\n}\n\nfunction get_note_object(note) {\n    return {\n        note: get_attribute(note, 'step'),\n        octave: get_attribute(note, 'octave'),\n        alter: get_attribute(note, 'alter'),\n        duration: get_attribute(note, 'duration'),\n        type: get_attribute(note, 'type')\n    }\n}\n\nexport default function get_notes(xml) {\n    let notes = xml.querySelectorAll(\"note\");\n    if (xml.querySelectorAll('score-part').length > 2) {\n        notes = xml.querySelectorAll('part')[0].querySelectorAll('note');\n    }\n    let left = [];\n    let right = [];\n    let toAddLeft = [];\n    let toAddRight = [];\n    notes.forEach(note => {\n        const note_obj = get_note_object(note);\n        if (get_attribute(note, 'staff') === '2') {\n            if (!is_chord(note) && toAddLeft.length > 0) {\n                left.push(toAddLeft.reverse());\n                toAddLeft = [];\n            }\n            toAddLeft.push(note_obj);\n        } else {\n            if (!is_chord(note) && toAddRight.length > 0) {\n                right.push(toAddRight.reverse());\n                toAddRight = [];\n            }\n            toAddRight.push(note_obj);\n        }\n    })\n    const beats = xml.querySelector(\"beats\").innerHTML;\n    const firstMeasure = xml.querySelector(\"measure\");\n    let firstMeasureDuration = 0;\n    firstMeasure.querySelectorAll('note').forEach(note => {\n        if (!note.querySelector('chord') && (!note.querySelector('staff') || note.querySelector('staff').innerHTML === '1')) {\n            console.log(note.innerHTML);\n            firstMeasureDuration += parseInt(note.querySelector('duration').innerHTML);\n        }\n    });\n    const secondMeasure = xml.querySelectorAll(\"measure\")[xml.querySelectorAll(\"measure\").length > 1 ? 1 : 0];\n    let secondMeasureDuration = 0;\n    secondMeasure.querySelectorAll('note').forEach(note => {\n        if (!note.querySelector('chord') && (!note.querySelector('staff') || note.querySelector('staff').innerHTML === '1')) {\n            console.log(note.innerHTML);\n            secondMeasureDuration += parseInt(note.querySelector('duration').innerHTML);\n        }\n    });\n    const measureDiff = secondMeasureDuration - firstMeasureDuration;\n    if (measureDiff > 0) {\n        left.unshift([{note: null, octave: null, alter: null, duration: measureDiff, type: null }])\n        right.unshift([{note: null, octave: null, alter: null, duration: measureDiff, type: null }])\n    }\n    return {left: left, right: right, beats: beats, beatLength: secondMeasureDuration / beats};\n}\n\nfunction getInfo(file) {\n    const reader = new FileReader();\n\n    reader.readAsText(file);\n    return new Promise(resolve => {\n        reader.onloadend = (evt) => {\n            const readerData = evt.target.result;\n\n            const parser = new DOMParser();\n            const xml = parser.parseFromString(readerData, 'text/xml');\n            const notes = get_notes(xml);\n\n            resolve(notes);\n        };\n    });\n\n\n}","import React, { Component } from 'react';\nimport Visualizer from './Visualizer';\nimport BurgerMenu from 'react-burger-menu';\nimport { List, ListItem } from 'react-mdl';\nimport domtoimage from \"dom-to-image\";\nimport jsPDF from \"jspdf\";\nimport getInfo from '../parser/XMLParser';\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            beats: 4,\n            beatLength: 64,\n            radius: 20,\n            height: 320,\n            widthRatio: 2,\n            barsPerLine: 2,\n            incrementMultiplier: 100,\n            handDiff: 250,\n            selectedFile: null,\n            left: [],\n            right: [],\n            hidden: true,\n            file_name: '',\n            linesInPdf: 3,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps !== this.props) {\n            this.resetScreen();\n        }\n    }\n\n    resetScreen() {\n        const { beats, beatLength } = this.props;\n        const bars = window.innerWidth < 800 ? 1 : 2;\n        const width = window.innerWidth / (beats * beatLength * bars);\n        const radius = window.innerWidth / (beats * bars * 8);\n        const height = window.innerHeight / 2;\n        this.setState({\n            widthRatio: width,\n            barsPerLine: bars,\n            radius: radius,\n            height: height,\n            incrementMultiplier: 100,\n            handDiff: height * 0.35,\n            linesInPdf: 3,\n            beatLength: beatLength,\n        });\n    }\n\n    createSlider(label, value, min, max, step) {\n        return (\n            <ListItem>\n                <label>{label}\n                    <input type=\"range\" min={min} max={max} step={step} value={this.state[value]}\n                           onChange={e => this.setState({[value]: e.target.value})} />\n\n                </label>\n            </ListItem>\n        )\n    }\n\n    takeScreenshot() {\n        const node = document.getElementById('capture');\n        const self = this;\n        domtoimage.toPng(node)\n            .then(src => {\n                var img = new Image();\n                img.src = src;\n                img.onload = function() {\n                    const width = img.width;\n                    const height = self.state.height * self.state.linesInPdf;\n                    const pdf = new jsPDF(\"l\", \"mm\", \"a4\");\n                    for (var i = 0; i < img.height / height; i++) {\n                        var canvas = document.createElement('canvas');\n                        canvas.width = width;\n                        canvas.height = height;\n                        var context = canvas.getContext('2d');\n                        context.drawImage(img, 0, height*i, width, height, 0, 0, width, height);\n                        let splitImage = new Image();\n                        splitImage.src = canvas.toDataURL();\n                        pdf.addImage(splitImage, 'png', 10, 10, 280, 202);  // 180x150 mm @ (10,10)mm\n                        if (i+1 < img.height/height) {\n                            pdf.addPage();\n                        }\n                    }\n                    console.log(self.props.file_name);\n                    pdf.save(self.props.file_name + '.pdf');\n                }\n\n            })\n            .catch(function (error) {\n                console.error('oops, something went wrong!', error);\n            });\n\n    }\n\n    render() {\n        const Menu = BurgerMenu['slide'];\n        const styles = {\n            bmBurgerButton: {\n                position: 'absolute',\n                width: '36px',\n                height: '30px',\n                left: '24px',\n                top: '24px'\n            },\n            bmBurgerBars: {\n                background: '#373a47'\n            },\n            bmCrossButton: {\n                height: '24px',\n                width: '24px'\n            },\n            bmCross: {\n                background: '#bdc3c7'\n            },\n            bmMenu: {\n                background: '#373a47',\n                padding: '2.5em 1.5em 0',\n                fontSize: '1.15em'\n            },\n            bmMorphShape: {\n                fill: '#373a47'\n            },\n            bmItemList: {\n                color: '#b8b7ad',\n                padding: '0.8em'\n            },\n            bmOverlay: {\n                background: 'rgba(0, 0, 0, 0.3)'\n            }\n        };\n        const { left, right, beats } = this.props;\n        const {radius, height, widthRatio, barsPerLine, incrementMultiplier, handDiff, file_name, beatLength} = this.state;\n        console.log(widthRatio);\n        const sliders = <div>\n            <h1 style={{ width: '150%', marginLeft: '-30%', textAlign: 'center'}}>Customize notes:</h1>\n            {this.createSlider(\"Size of Notes\", 'radius', 5, 50, 1)}\n            {this.createSlider(\"Gap between hands\", 'handDiff', 20, 300, 1)}\n            {this.createSlider(\"Line Height\", 'height', 100, 1000, 1)}\n            {this.createSlider(\"Line Width\", 'widthRatio', 0, 10, 0.1)}\n            {this.createSlider(\"Bars per line\", 'barsPerLine', 1, 5, 1)}\n            {this.createSlider(\"Pitch Difference\", 'incrementMultiplier', 0, 300, 1)}\n            <button style={{marginLeft: '15%', marginTop: '10%', marginBottom: '25%'}} onClick={() => this.resetScreen()}>Reset sizes</button>\n            <h1 style={{ width: '150%', marginLeft: '-30%', textAlign: 'center'}}>Download:</h1>\n            {this.createSlider(\"Lines per page in pdf\", 'linesInPdf', 1, 7, 1)}\n            <button style={{marginLeft: '12%', marginTop: '10%'}} onClick={() => this.takeScreenshot()}>Download music</button>\n\n        </div>;\n        return (\n                <div id=\"outer-container\" style={{height: '90%', position: 'absolute', top: 0, left: 0, zIndex: -2}}>\n                    <Menu\n                        styles={styles}\n                        noOverlay id={'slide'}\n                        pageWrapId={'page-wrap'}\n                        outerContainerId={'outer-container'}\n                    >\n                        <List>\n                            {sliders}\n                        </List>\n                    </Menu>\n                    <div id=\"page-wrap\" >\n                        <Visualizer style={{zIndex: -1}} beats={beats} beatLength={beatLength}\n                                    multiplier={barsPerLine} incrementMultiplier={incrementMultiplier}\n                                    handDiff={parseInt(handDiff)} radius={radius}\n                                    height={parseInt(height)} widthRatio={widthRatio}\n                                    rightNotes={right} leftNotes={left} file_name={file_name}\n                        />\n                    </div>\n\n\n\n                </div>\n\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport get_notes from '../parser/XMLParser';\nimport axios from 'axios';\nimport JSZip from 'node-zip';\n\nvar config = {\n    apiKey: \"AIzaSyCdwRJgEWCP60ZcRflV-VE_LMHarUC_ifs\",\n    authDomain: \"piano-ea315.firebaseapp.com\",\n    databaseURL: \"https://piano-ea315.firebaseio.com\",\n    projectId: \"piano-ea315\",\n    storageBucket: \"piano-ea315.appspot.com\",\n    messagingSenderId: \"167789733462\"\n};\nfirebase.initializeApp(config);\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            selectedFile: null,\n            file_name: '',\n            title: '',\n        };\n    }\n\n    handleSelectedFile = event => {\n        this.setState({\n            selectedFile: event.target.files[0],\n            file_name: event.target.files[0].name,\n        })\n    };\n\n    async viewFile(title) {\n        const self = this;\n        const storageRef = firebase.storage().ref();\n        storageRef.child(title).getDownloadURL().then(function(url) {\n            axios.get(url).then(res => {\n                const parser = new DOMParser();\n                console.log(res.data);\n                const xml = parser.parseFromString(res.data, 'text/xml');\n                const notes = get_notes(xml);\n                console.log(notes);\n                self.props.loadFile(notes, title.split(\".xml\")[0]);\n            });\n            console.log(url);\n        }).catch(function(error) {\n            console.log(error);\n            // Handle any errors\n        });\n    }\n\n    async handleUpload() {\n        let { selectedFile, file_name } = this.state;\n        var storageRef = firebase.storage().ref();\n        var ref = storageRef.child(file_name);\n        ref.put(selectedFile).then(() => {\n            this.setState({title: file_name});\n            this.viewFile(file_name);\n        });\n\n\n    };\n\n    render() {\n        return (\n            <div>\n                <div style={{marginLeft: \"20%\", display: 'flex', flexDirection: 'row'}}>\n                    <input style={{width: '20%'}} type=\"file\" name=\"\" id=\"\" onChange={this.handleSelectedFile} />\n                    <div style={{width: '20%'}}>\n                        <button  onClick={() => this.handleUpload()}>Upload</button>\n                    </div>\n                    <div style={{width: '20%'}}>\n                        <input style={{marginLeft: '5%', width: '85%'}} type=\"text\" value={this.state.title} onChange={e => this.setState({title: e.target.value})}/>\n                    </div>\n\n                    <div style={{width: '20%'}}>\n                        <button onClick={() => this.viewFile(this.state.title)}>View</button>\n                    </div>\n                </div>\n                <div id=\"linkbox\">\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport get_notes from \"../parser/XMLParser\";\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            selectedFile: null,\n        };\n    }\n\n    handleSelectedFile = event => {\n        this.setState({\n            selectedFile: event.target.files[0],\n        })\n    };\n\n    handleFileRead = (fileReader) => {\n        const { selectedFile } = this.state;\n        const { updateNotes } = this.props;\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(fileReader.target.result,\"text/xml\");\n        const notes = get_notes(xmlDoc);\n        updateNotes && updateNotes(notes, selectedFile.name);\n    };\n\n    async handleUpload() {\n        let { selectedFile } = this.state;\n        const fileReader = new FileReader();\n        fileReader.onloadend = this.handleFileRead;\n        fileReader.readAsText(selectedFile);\n    };\n\n    render() {\n        return (\n            <div>\n                <div style={{marginLeft: \"20%\", display: 'flex', flexDirection: 'row'}}>\n                    <input style={{width: '20%'}} type=\"file\" name=\"\" id=\"\" onChange={this.handleSelectedFile} />\n                    <div style={{width: '20%'}}>\n                        <button  onClick={() => this.handleUpload()}>Upload</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport './App.css'\nimport MainView from './components/MainView';\nimport FileSaver from './components/FileSaver';\nimport FileLoader from './new_components/FileLoader';\n\n//Here's a comment from test branch\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            left: [],\n            right: [],\n            beats: 4,\n            name: '',\n            beatLength: 64,\n        };\n        this.setNotes = this.setNotes.bind(this);\n    }\n\n    normalizeNotes(notes) {\n\n    }\n\n    setNotes(notes, name) {\n        console.log(notes.left);\n        console.log(notes.beats);\n        console.log(notes.beatLength);\n        this.setState({left: notes.left, right: notes.right, beats: notes.beats, name: name, beatLength: notes.beatLength})\n    }\n    \n  render() {\n    const { left, right, beats, beatLength, name } = this.state;\n    return (\n        <div>\n            <FileLoader updateNotes={this.setNotes} />\n            {/*<FileSaver loadFile={this.loadFile}/>*/}\n            <MainView file_name={name} left={left} right={right} beats={beats} beatLength={beatLength} />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}